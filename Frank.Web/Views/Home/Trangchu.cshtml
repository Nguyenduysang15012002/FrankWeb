@using Frank.Service.ProductService.Dto;
@using PagedList;
@using PagedList.Mvc;
@model  IPagedList<Frank.Service.ProductService.Dto.ProductDto>
@{
	ViewBag.Title = "Trangchu";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
	var lstData = Html.Raw(Json.Encode(Model));
	//var ViewBagId = ViewBag.Id;

}

<style>
	#card-container {
		display: flex;
		margin-top: 40px;
		align-items: center;
		align-content: center;
		flex-wrap: wrap;
		text-align: center;
		justify-content: center;
		/*justify-content:center;*/
	}

	.card {
		margin: 10px 20px;
		align-items: center;
		align-content: center
	}

	#carouselExampleIndicators {
		margin-top: 60px;
		border-style: dashed double none;
		border-color: aqua;
	}

	.datatable-bottom {
		text-align: center;
		margin: 20px 0;
	}

	.datatable-pagination {
		display: inline-block;
		padding: 0;
		margin: 0;
	}

		.datatable-pagination ul {
			list-style-type: none;
			padding: 0;
			margin: 0;
			display: flex;
			justify-content: center;
		}

			.datatable-pagination ul li {
				display: inline;
				margin: 0 5px;
			}

				.datatable-pagination ul li a {
					color: #007bff;
					text-decoration: none;
					padding: 8px 16px;
					border: 1px solid #ddd;
					border-radius: 4px;
					transition: background-color 0.3s, color 0.3s;
				}

					.datatable-pagination ul li a:hover {
						background-color: #007bff;
						color: white;
						border-color: #007bff;
					}

				.datatable-pagination ul li.active a {
					background-color: #007bff;
					color: white;
					border-color: #007bff;
				}

				.datatable-pagination ul li.disabled a {
					color: #ddd;
					pointer-events: none;
					border-color: #ddd;
				}
</style>
@*<div class="card" style="width:400px">
		<img class="card-img-top" src="" alt="Card image">
		<div class="card-body">
			<h4 class="card-title">John Doe</h4>
			<p class="card-text">Some example text.</p>
			<a href="#" class="btn btn-primary">See Profile</a>
		</div>
	</div>*@

<div id="carouselExampleIndicators" class="carousel slide fluid" data-bs-ride="carousel">
	<div class="carousel-indicators">
		<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
		<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
		<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
	</div>
	<div class="carousel-inner">
		<div class="carousel-item active">
			<img class="d-block w-100" src="~/Images/ImagesBanner/anh1.jpg" style="height: 300px; width: 100% ">
		</div>
		<div class="carousel-item">
			<img class="d-block w-100" src="~/Images/ImagesBanner/anh2.jpg" style="height: 300px; width: 100% ">
		</div>
		<div class="carousel-item">
			<img class="d-block w-100" src="~/Images/ImagesBanner/anh3.jpg" style="height: 300px; width: 100% ">
		</div>
	</div>
	<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
		<span class="carousel-control-prev-icon" aria-hidden="true"></span>
		<span class="visually-hidden">Previous</span>
	</button>
	<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
		<span class="carousel-control-next-icon" aria-hidden="true"></span>
		<span class="visually-hidden">Next</span>
	</button>
</div>
<div id="card-container">
	<!-- Các phần tử card sẽ được thêm vào đây -->

</div>
<div class="datatable-bottom">
	<nav class="datatable-pagination">
		@{
			var options = new PagedListRenderOptions
			{
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToIndividualPages = true
			};

			Func<int, string> pageUrlGenerator = page => Url.Action("Trangchu", new { Id = ViewBag.Id, page, pageSize = ViewBag.PageSize });

			@Html.PagedListPager(Model, pageUrlGenerator, options)
		}
	</nav>
</div>



@section scripts {

	<script>
		var lstData = @Html.Raw(lstData);
		var check = "@ViewBag.Id";

		debugger
	@*$.each(lstData, function(index, item) {
		var card = $('<div class="card" style="width:250px">').click(function () {
			if (check != null) {
				window.location.href = '@Url.Action("Detail", "Product")' + '?Id=' + item.Id + '&User_Id=' + check;
			} else {
				window.location.href = '@Url.Action("Detail", "Product")' + '?Id=' + item.Id;
			}
		});
		var cardBody = $('<div class="card-body">');
		card.append('<img class="card-img-top" style="height:150px;width:250px;" src="' + item.Url_Image + '" alt="Không tìm thấy ảnh">');
		cardBody.append('<h4 class="card-title">' + item.Name + '</h4>');
		cardBody.append('<p class="card-text">' + item.Brand + '</p>');
		cardBody.append('<p class="card-text">' + item.Price + ' <span style="color: red;">VND</span></p>');
			card.append(cardBody);
		$('#card-container').append(card);

	});*@
		function renderCards(data) {
			$('#card-container').empty();
			$.each(data, function(index, item) {
				var card = $('<div class="card" style="width:250px">').click(function () {
					if (check != null) {
						window.location.href = '@Url.Action("Detail", "Product")' + '?Id=' + item.Id + '&User_Id=' + check;
					} else {
						window.location.href = '@Url.Action("Detail", "Product")' + '?Id=' + item.Id;
					}
				});
				var cardBody = $('<div class="card-body">');
				card.append('<img class="card-img-top" style="height:150px;width:250px;" src="' + item.Url_Image + '" alt="Không tìm thấy ảnh">');
				cardBody.append('<h4 class="card-title">' + item.Name + '</h4>');
				cardBody.append('<p class="card-text">' + item.Brand + '</p>');
				cardBody.append('<p class="card-text">' + item.Price + ' <span style="color: red;">VND</span></p>');
				card.append(cardBody);
				$('#card-container').append(card);
			});
		}

		renderCards(lstData); // Initial rendering of cards

		$('#searchaa').on('input', function() {
			var searchText = $(this).val().toLowerCase();
			var filteredData = lstData.filter(function(item) {
				return item.Name.toLowerCase().includes(searchText);
			});
			renderCards(filteredData);
		});
	</script>

}


