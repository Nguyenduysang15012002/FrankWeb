@using Frank.Service.OrderService.Dto;
@using PagedList;
@using PagedList.Mvc;

@{
	ViewBag.Title = "DonHang";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var Id = ViewBag.Id;
}
@model  IPagedList<Frank.Service.OrderService.Dto.OrderDto>
@{
	// Tạo một Dictionary ánh xạ giữa giá trị Processing_Status và chuỗi tương ứng
	Dictionary<int, string> statusMappings = new Dictionary<int, string>
{
		{ 1, "Chờ xác nhận" },
		{ 2, "Đang giao hàng" },
		{ 3, "Giao hàng thành công" },
		{ 4, "Đơn hàng đã bị hủy" },
		};
}
<style>
	.a {
		margin: auto;
		height: auto;
		margin-top: 65px;
	}

	.b {
		margin: 30px auto;
		border: solid;
		border-color: black;
	}

	.c {
		margin: auto;
		width: 100%;
		align-items: center;
		text-align: center;
		padding-top: 10px;
	}

	.product-main-image {
		width: 80%; /* Điều chỉnh kích thước ảnh chính */
		height: auto;
	}

	.product-thumb-image {
		width: 50px; /* Điều chỉnh kích thước ảnh nhỏ */
		height: 50px;
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

		.form-group label {
			font-weight: bold;
			margin-bottom: 0.5rem;
			display: block; /* Đảm bảo label hiển thị thành một khối trên input */
		}

		.form-group input {
			width: 100%;
			padding: 0.5rem;
			border: 1px solid #ced4da;
			border-radius: 4px;
			box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
		}

	.number-box {
		display: flex;
		align-items: center;
		justify-content: center;
		margin: 20px auto;
		width: 150px;
		height: 40px;
		border: 1px solid #ccc;
		border-radius: 4px;
		overflow: hidden;
	}

		.number-box input {
			width: 60px;
			height: 100%;
			border: none; /* Xóa đường viền */
			text-align: center;
			outline: none;
			background-color: transparent; /* Làm nền trong suốt */
			box-shadow: none; /* Xóa đổ bóng */
			-webkit-appearance: none; /* Xóa kiểu mặc định trong Safari */
			-moz-appearance: none; /* Xóa kiểu mặc định trong Firefox */
			appearance: none; /* Xóa kiểu mặc định */
		}

		.number-box .next-icon {
			display: flex;
			align-items: center;
			justify-content: center;
			width: 30px;
			height: 100%;
			background-color: #f0f0f0;
			cursor: pointer;
			transition: background-color 0.3s; /* Thêm hiệu ứng chuyển tiếp */
		}

			.number-box .next-icon:hover {
				background-color: #ddd; /* Thay đổi màu nền khi hover */
			}

			.number-box .next-icon:disabled {
				background-color: #e0e0e0;
				cursor: not-allowed;
			}

	.custom-input {
		border: none; /* Bỏ border */
		border-right: none; /* Bỏ border bên phải */

		padding-right: 0; /* Bỏ padding bên phải */
		outline: none; /* Bỏ đường viền khi focus */
	}
	/* CSS cho phân trang */
	.datatable-bottom {
		text-align: center;
		margin: 20px 0;
	}

	.datatable-pagination {
		display: inline-block;
		padding: 0;
		margin: 0;
	}

		.datatable-pagination ul {
			list-style-type: none;
			padding: 0;
			margin: 0;
			display: flex;
			justify-content: center;
		}

			.datatable-pagination ul li {
				display: inline;
				margin: 0 5px;
			}

				.datatable-pagination ul li a {
					color: #007bff;
					text-decoration: none;
					padding: 8px 16px;
					border: 1px solid #ddd;
					border-radius: 4px;
					transition: background-color 0.3s, color 0.3s;
				}

					.datatable-pagination ul li a.page-link:hover {
						background-color: #007bff;
						color: white;
						border-color: #007bff;
					}

				.datatable-pagination ul li.active a {
					background-color: #007bff;
					color: white;
					border-color: #007bff;
				}

				.datatable-pagination ul li.disabled a {
					color: #ddd;
					pointer-events: none;
					border-color: #ddd;
				}

	th {
		text-align: center;
		font-weight: bold;
		color: black;
	}

	.clickable-row:hover {
		background-color: black; /* Màu nền khi hover */
		cursor: pointer; /* Biểu tượng con trỏ khi hover */
	}
</style>


<div class="a">
	<div class="container">
		<div class="row mt-4">
			<div class="col-md-12">
				<div class="card">
					<div class="card-body">
						<h4 class="card-title">Danh sách đơn hàng</h4>
						<div class="table-responsive">

							<table class="table table-bordered">
								<thead>
									<tr>
										<th>STT</th>
										<th>Mã đơn hàng</th>
										<th>Tên người nhận</th>
										<th>Địa chỉ nhận hàng</th>
										<th>Trạng thái đơn hàng</th>
										<th>Tổng tiền</th>
									</tr>
								</thead>
								<tbody>
									@if (Model != null && Model.Any())
									{
										var i = 1;

										foreach (var item in Model)
										{
											<tr class="clickable-row" data-item-id="@item.Id">
												<td style="text-align:center;">@i</td>
												<td>#Frank@(item.Id)</td>
												<td>@item.RecieveName</td>
												<td>@item.RecieveAddress</td>
												<td>@(statusMappings.ContainsKey(item.Processing_Status) ? statusMappings[item.Processing_Status] : "Trạng thái không xác định")</td>
												<td style="text-align:center;">@item.TotalPrice <i style="text-align:end;">VND</i></td>
											</tr>
											i++;
										}
									}
									else
									{
										<tr>
											<td colspan="6" style="color:red;font-weight:bold;text-align:center">Bạn không có đơn hàng nào.</td>
										</tr>
										<tr>
											<td colspan="6" style="color:red;font-weight:bold;text-align:center"></td>
										</tr>
										<tr>
											<td colspan="6" style="color:red;font-weight:bold;text-align:center"></td>
										</tr>
										<tr>
											<td colspan="6" style="color:red;font-weight:bold;text-align:center"></td>
										</tr>
									}

								</tbody>
							</table>
						</div>
						<hr />
						<div class="datatable-bottom">
							<nav class="datatable-pagination">
								@{
									var options = new PagedListRenderOptions
									{
										DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
										DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
										DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
										DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
										DisplayLinkToIndividualPages = true
									};

									Func<int, string> pageUrlGenerator = page => Url.Action("DonHang", new { Id = ViewBag.Id, page, pageSize = ViewBag.PageSize });

									@Html.PagedListPager(Model, pageUrlGenerator, options)
								}
							</nav>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.6.0.slim.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
<link rel="stylesheet" href="~/Content/toastr.min.css" />
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".clickable-row").click(function () {
            var Order_Id = $(this).data("item-id");
            var User_Id = "@ViewBag.Id";
			var url = '@Url.Action("Detail_DonHang", "Home")' + "?User_Id=" + User_Id + "&Order_Id=" + Order_Id;
            window.location.href = url;
        });
    });
</script>